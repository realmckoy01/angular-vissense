!function(e){e.module("angular-vissense.config",[]).value("angularVissenseConfig",{debug:!0}),e.module("angular-vissense.services",[]),e.module("angular-vissense.directives",["angular-vissense.services"]),e.module("angular-vissense.directives.debug",[]),e.module("angular-vissense",["angular-vissense.config","angular-vissense.directives","angular-vissense.services"])}(angular),function(e){e.module("angular-vissense.directives").directive("vissenseMonitor",["VisSense","VisUtils",function(e,i){var t={scope:{monitor:"=?ngModel",config:"@",onUpdate:"&",onHidden:"&",onVisible:"&",onFullyvisible:"&",onPercentagechange:"&",onVisibilitychange:"&"},link:function(t,n){var s=i.debounce(function(){t.$digest(),t.$parent.$digest()},1e3);n.addClass("vissense-monitor"),t.monitor=new e(n[0],t.config).monitor({update:function(e){t.onUpdate({monitor:e}),s()},hidden:function(e){t.onHidden({monitor:e})},visible:function(e){t.onVisible({monitor:e})},fullyvisible:function(e){t.onFullyvisible({monitor:e})},percentagechange:function(e,i,n){t.onPercentagechange({newValue:e,oldValue:i,monitor:n})},visibilitychange:function(e){t.onVisibilitychange({monitor:e}),n.removeClass("vissense-monitor-hidden"),n.removeClass("vissense-monitor-fullyvisible"),n.removeClass("vissense-monitor-visible"),e.state().fullyvisible?n.addClass("vissense-monitor-fullyvisible"):e.state().hidden?n.addClass("vissense-monitor-hidden"):n.addClass("vissense-monitor-visible")}}).startAsync(),t.$on("$destroy",function(){t.monitor.stop()})}};return t}])}(angular),function(e){e.module("angular-vissense.directives.debug").directive("vissenseMetricsInfocard",[function(){var e={scope:{elementId:"@vissenseMetricsInfocard"},controller:["$scope","$interval","VisSense","VisUtils","VisSenseService",function(e,i,t,n,s){var a=s.fromId(e.elementId,{}),o=a.metrics({strategy:new t.VisMon.Strategy.PollingStrategy({interval:100})}).start(),r=a.monitor({visibilitychange:n.debounce(function(i){e.$apply(function(){e.state=i.state().state})},0)}).start(),l=n.debounce(function(){e.$apply(function(){e.timeHidden=o.getMetric("time.hidden").get(),e.timeVisible=o.getMetric("time.visible").get(),e.timeFullyVisible=o.getMetric("time.fullyvisible").get(),e.timeRelativeVisible=o.getMetric("time.relativeVisible").get(),e.duration=o.getMetric("time.duration").get(),e.percentage={current:o.getMetric("percentage").get(),max:o.getMetric("percentage.max").get(),min:o.getMetric("percentage.min").get()}})},0),c=i(l,200);e.$on("$destroy",function(){o.stop(),r.stop(),i.cancel(c)})}],template:'<style>.vissense-metrics-container {margin: 0px;position: fixed;left: 42px;bottom: 13px;width: 600px;height: 200px;box-shadow: 3px 3px 15px 3px rgba(0, 0, 0, 0.4);z-index: 99999;background-color: rgba(242,242,242,0.9);}.vissense-flexbox {display: box;display: -webkit-box;display: -moz-box;box-orient: horizontal;-webkit-box-orient: horizontal;-moz-box-orient: horizontal;}.vissense-flexbox .box {font-size: 23px;padding: 10px;width: 150px;text-align: center;}.vissense-flexbox .vissense-box small {color: #888;}</style><div class="vissense-metrics-container"><div style="text-align:center">{{state}}</div><div class="vissense-flexbox"><div class="box"><div>{{timeVisible / 1000 | number:1}}s</div><small>time visible</small></div><div class="box"><div>{{timeFullyVisible / 1000 | number:1}}s</div><small>time fullyvisible</small></div><div class="box"><div>{{timeHidden * 100 / duration | number:0}}%</div><small>percentage hidden</small></div><div class="box"><div>{{timeVisible * 100 / duration | number:0}}%</div><small>percentage visible</small></div></div><div class="vissense-flexbox"><div class="box"><div>{{timeHidden / 1000 | number:1}}s</div><small>time hidden</small></div><div class="box"><div>{{timeRelativeVisible / 1000 | number:1}}s</div><small>time relative</small></div><div class="box"><div>{{percentage.min * 100 | number:0}}%</div><small>percentage min</small></div><div class="box"><div>{{percentage.max * 100 | number:0}}%</div><small>percentage max</small></div></div></div>'};return e}])}(angular),function(e){e.module("angular-vissense.directives.debug").directive("vissensePercentageTimeTest",["VisSenseService",function(e){var i={scope:{elementId:"@vissensePercentageTimeTest",timeLimit:"@",percentageLimit:"@",interval:"@"},controller:["$scope",function(i){var t=e.fromId(i.elementId);i.passed=!1,t.onPercentageTimeTestPassed(function(){i.$apply(function(){i.passed=!0})},{percentageLimit:i.percentageLimit||.5,timeLimit:i.timeLimit||1e3,interval:i.interval||100})}],template:"<span>{{percentageLimit * 100 | number:0}}/{{timeLimit / 1000 | number:0}} test: <span data-ng-style=\"{ color : passed ? 'green' : 'red'}\">{{passed}}</span></span>"};return i}]).directive("vissenseFiftyOneTest",[function(){var e={scope:{elementId:"@vissenseFiftyOneTest"},template:'<span data-vissense-percentage-time-test="{{elementId}}" data-percentage-limit="0.5" data-time-limit="1000" data-interval="100"></span>'};return e}]).directive("vissenseSixtyOneTest",[function(){var e={scope:{elementId:"@vissenseSixtyOneTest"},template:'<span data-vissense-percentage-time-test="{{elementId}}" data-percentage-limit="0.6" data-time-limit="1000" data-interval="100"></span>'};return e}])}(angular),function(e){e.module("angular-vissense.directives.debug").directive("vissensePercentage",["VisSenseService","VisUtils","$timeout",function(e,i,t){var n={scope:{elementId:"@vissensePercentage"},controller:["$scope",function(n){n.percentage="?",t(function(){var t=e.fromId(n.elementId).monitor({percentagechange:i.debounce(function(){n.$apply(function(){n.percentage=t.state().percentage})},10)}).start();n.$on("$destroy",function(){t.stop()})})}],template:"<span>{{percentage * 100 | number:0}}%</span>"};return n}])}(angular),function(e){e.module("angular-vissense.directives.debug").directive("vissenseState",["VisSenseService","VisUtils","$timeout",function(e,i,t){var n={scope:{elementId:"@vissenseState",fullyvisible:"@",hidden:"@",strategy:"@"},link:function(n){n.state="?",t(function(){var t=e.fromId(n.elementId,{fullyvisible:parseFloat(n.fullyvisible)||1,hidden:parseFloat(n.hidden)||0}).monitor({visibilitychange:i.debounce(function(e){n.$apply(function(){n.state=e.state().state})},10)}).start();n.$on("$destroy",function(){t.stop()})})},template:"<span>{{state}}</span>"};return n}]).directive("vissenseStateDebug",["VisSenseService","VisUtils","$timeout",function(e,i,t){var n={scope:{elementId:"@vissenseStateDebug"},controller:["$scope",function(n){n.state={},t(function(){var t=e.fromId(n.elementId).monitor({update:i.debounce(function(e){n.$apply(function(){n.state=e.state()})},10)}).start();n.$on("$destroy",function(){t.stop()})})}],template:"{{ state | json }}"};return n}])}(angular),function(e){e.module("angular-vissense.services").factory("VisSense",["$window",function(e){return e.VisSense}]).factory("VisUtils",["VisSense",function(e){return e.Utils}]).factory("VisSenseService",["VisSense",function(e){var i=function(i,t){var n=document.getElementById(i);return new e(n,t)};return{fromId:i}}])}(angular);